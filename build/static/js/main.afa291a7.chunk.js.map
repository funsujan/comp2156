{"version":3,"sources":["components/StudentForm.js","components/StudentCard.js","components/StudentList.js","App.js","reportWebVitals.js","index.js"],"names":["StudentForm","_ref","addStudent","student","setStudent","useState","name","age","major","handleChange","e","value","target","React","createElement","onSubmit","preventDefault","type","onChange","StudentCard","className","StudentList","students","length","map","index","key","App","setStudents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sMA2DeA,MAzDKC,IAAqB,IAApB,WAAEC,GAAYD,EACjC,MAAOE,EAASC,GAAcC,mBAAS,CACrCC,KAAM,GACNC,IAAK,GACLC,MAAO,KAGHC,EAAgBC,IACpB,MAAM,KAAEJ,EAAI,MAAEK,GAAUD,EAAEE,OAC1BR,EAAW,IACND,EACH,CAACG,GAAOK,KAYZ,OACEE,IAAAC,cAAA,QAAMC,SATcL,IACpBA,EAAEM,iBACEb,EAAQG,MAAQH,EAAQI,KAAOJ,EAAQK,QACzCN,EAAWC,GACXC,EAAW,CAAEE,KAAM,GAAIC,IAAK,GAAIC,MAAO,QAMvCK,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,SACEG,KAAK,OACLX,KAAK,OACLK,MAAOR,EAAQG,KACfY,SAAUT,KAGdI,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SACEG,KAAK,SACLX,KAAK,MACLK,MAAOR,EAAQI,IACfW,SAAUT,KAGdI,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SACEG,KAAK,OACLX,KAAK,QACLK,MAAOR,EAAQK,MACfU,SAAUT,KAGdI,IAAAC,cAAA,UAAQG,KAAK,UAAS,iBC1CbE,MAVKlB,IAAkB,IAAjB,QAAEE,GAASF,EAC9B,OACEY,IAAAC,cAAA,OAAKM,UAAU,gBACbP,IAAAC,cAAA,UAAKX,EAAQG,MACbO,IAAAC,cAAA,SAAG,QAAMX,EAAQI,KACjBM,IAAAC,cAAA,SAAG,UAAQX,EAAQK,SCWVa,MAfKpB,IAAmB,IAAlB,SAAEqB,GAAUrB,EAC/B,OACEY,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBACHQ,EAASC,OAAS,EACjBD,EAASE,IAAI,CAACrB,EAASsB,IACrBZ,IAAAC,cAACK,EAAW,CAACO,IAAKD,EAAOtB,QAASA,KAGpCU,IAAAC,cAAA,SAAG,2BCaIa,MApBHA,KACV,MAAOL,EAAUM,GAAevB,mBAAS,IAMzC,OACEQ,IAAAC,cAAA,OAAKM,UAAU,OACbP,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,UAAI,4CACJD,IAAAC,cAACd,EAAW,CAACE,WAVGC,IAClByB,EAAY,IAAIN,EAAUnB,OASe,0BAEvCU,IAAAC,cAACO,EAAW,CAACC,SAAUA,MCRdO,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK/B,IAAkD,IAAjD,OAAEgC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASpC,EACpEgC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7B,IAAAC,cAACD,IAAM8B,WAAU,KACf9B,IAAAC,cAACa,EAAG,QAORE,K","file":"static/js/main.afa291a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst StudentForm = ({ addStudent }) => {\r\n  const [student, setStudent] = useState({\r\n    name: \"\",\r\n    age: \"\",\r\n    major: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setStudent({\r\n      ...student,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (student.name && student.age && student.major) {\r\n      addStudent(student);\r\n      setStudent({ name: \"\", age: \"\", major: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={student.name}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Age:</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"age\"\r\n          value={student.age}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Major:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"major\"\r\n          value={student.major}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Student</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentForm;\r\n","import React from \"react\";\r\n\r\nconst StudentCard = ({ student }) => {\r\n  return (\r\n    <div className=\"student-card\">\r\n      <h3>{student.name}</h3>\r\n      <p>Age: {student.age}</p>\r\n      <p>Major: {student.major}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentCard;\r\n","import React from \"react\";\r\nimport StudentCard from \"./StudentCard\";\r\n\r\nconst StudentList = ({ students }) => {\r\n  return (\r\n    <div>\r\n      <h2>Student List</h2>\r\n      {students.length > 0 ? (\r\n        students.map((student, index) => (\r\n          <StudentCard key={index} student={student} />\r\n        ))\r\n      ) : (\r\n        <p>No students added yet</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport StudentForm from \"./components/StudentForm\";\r\nimport StudentList from \"./components/StudentList\";\r\n\r\nconst App = () => {\r\n  const [students, setStudents] = useState([]);\r\n\r\n  const addStudent = (student) => {\r\n    setStudents([...students, student]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Studen ID: 101464863</h1>\r\n      <h1>Studen Name: SUJAN BK</h1>\r\n      <h1>Student Information System</h1>\r\n      <h5>Powered By: moxDroid Labs Inc. || DevOps</h5>\r\n      <StudentForm addStudent={addStudent} />\r\n      Developerd By: SUJAN BK\r\n      <StudentList students={students} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}